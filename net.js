// Generated by CoffeeScript 1.12.6
(function() {
  var format, host, ipc, net, plugin, port, server, util;

  net = require('net');

  util = require('util');

  server = null;

  switch (false) {
    case process.env.TANGIBLE_PORT == null:
      server = net.createServer();
      port = parseInt(process.env.TANGIBLE_PORT);
      host = process.env.TANGIBLE_HOST;
      server.listen(port, host);
      break;
    case process.env.TANGIBLE_IPC == null:
      server = net.createServer();
      ipc = process.env.TANGIBLE_IPC;
      server.listen(ipc);
  }

  format = function(d) {
    switch (false) {
      case !(d == null):
        return '';
      case typeof d !== 'string':
        return d;
      default:
        return JSON.stringify(d);
    }
  };

  module.exports = plugin = function(w) {
    if (server == null) {
      return;
    }
    return server.on('connection', function(socket) {
      var missed, ready;
      ready = true;
      missed = 0;
      return w.on('debug', function(data) {
        var ref, ref1;
        if (!ready) {
          missed++;
          return;
        }
        ready = socket.write("---\n" + data.stamp + " " + ((ref = data.reference) != null ? ref : '') + " " + data.host + "\n" + data.event + " " + data.application + " " + ((ref1 = data.method) != null ? ref1 : '') + "\n" + data.msg + "\n" + (format(data.data)) + "\n" + (format(data.extra)) + "\n\n", function() {
          socket.write("--- Missed " + missed + "\n");
          missed = 0;
          return ready = true;
        });
      });
    });
  };

}).call(this);
